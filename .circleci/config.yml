version: 2.1

aliases:
  - repo_cache_filename: &repo_cache_filename repo-{{ .Environment.CIRCLE_SHA1 }}
  - &save_npm_cache
      key: npm-deps-{{ .Branch }}-{{ checksum ".circleci/config.yml" }}-{{ checksum "package-lock.json" }}
      name: Save npm modules
      paths:
        - ~/.npm/
        - ./node_modules/
  - &restore_npm_cache
      keys:
        - npm-deps-{{ .Branch }}-{{ checksum ".circleci/config.yml" }}-{{ checksum "package-lock.json" }}
        - npm-deps-{{ checksum ".circleci/config.yml" }}-{{ checksum "package-lock.json" }}
      name: Restore npm modules

_install: &install
  steps:
    - checkout
    - save_cache:
        key: *repo_cache_filename
        name: Save repo
        paths:
          - ~/project/
    - restore_cache: *restore_npm_cache
    - run: npm ci
    - save_cache: *save_npm_cache

_image: &image
  docker:
    - image: circleci/node:12

commands:
  run-tests:
    parameters:
      test-commands:
        description: "Steps that will be executed after the repo is cloned and dependencies are installed, but before tests are run"
        type: steps
        default: []
    steps:
      - restore_cache:
          key: *repo_cache_filename
          name: Restore repo
      - restore_cache: *restore_npm_cache
      - run: node --version
      - run: npm --version
      - run: curl --silent https://v4.ifconfig.co/
      - steps: << parameters.test-commands >>

jobs:
  install:
    <<: *image
    <<: *install

  test:
    <<: *image
    steps:
      - run-tests:
          test-commands:
            - run:
                name: Run tests
                command: npm run test-with-coverage
            - run:
                name: Run coveralls
                command: npm run coveralls
                when: on_success

  test-functional-debug:
    <<: *image
    steps:
      - run-tests:
          test-commands:
            - run:
                name: Run functional tests (debug)
                command: npm run mocha:only-functional:dev

  test-functional-prod:
    <<: *image
    steps:
      - run-tests:
          test-commands:
            - run:
                name: Run functional tests (production)
                command: npm run mocha:only-functional:prod

workflows:
  version: 2
  install-and-test:
    jobs:
      - install
      - test:
          requires:
            - install
      - test-functional-debug:
          requires:
            - install
      - test-functional-prod:
          requires:
            - install
